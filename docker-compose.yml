version: '3'

services:
  web:
    container_name: eksiCodeBackendNginx
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./web:/var/www/myapp
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    links:
      - backend
    networks:
      main:
        aliases:
          - eksiCodeBackendNginx

  backend:
    container_name: eksiCodeBackendWebAPI
    build:
      context: .
      dockerfile: EksiCodeBackend/EksiCodeBackend.WebAPI/Dockerfile
    
    ports:
      - "3000"
    depends_on:
      - database
    networks:
      main:
        aliases:
          - eksiCodeBackendWebAPI

  database:
    container_name: eksiCodeBackendDatabase
    image: "postgres" # use latest official postgres version
    volumes:
      - ./db/db.sql:/docker-entrypoint-initdb.d/db.sql
    env_file:
      - database-sample.env # configure postgres
    ports:
        - 5432:2345
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      main:
        aliases:
          - eksiCodeBackendDatabase
    
volumes:
  web:
  backend:
  database:

networks:
  main:
    driver: bridge